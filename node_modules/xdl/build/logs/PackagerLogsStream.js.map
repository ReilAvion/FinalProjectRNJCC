{"version":3,"sources":["../../src/logs/PackagerLogsStream.ts"],"names":["PackagerLogsStream","constructor","projectRoot","getCurrentOpenProjectId","updateLogs","onStartBuildBundle","onProgressBuildBundle","onFinishBuildBundle","getSnippetForError","chunk","msg","bundleDetails","bundleDetailsCache","buildID","type","String","_metroEventType","_handleNewBundleTransformStarted","_bundleBuildChunkID","_handleUpdateBundleTransformProgress","_updateLogs","logs","_logsToAdd","length","nextLogs","concat","match","replace","_projectRoot","_getCurrentOpenProjectId","_onStartBuildBundle","_onProgressBuildBundle","_onFinishBuildBundle","_getSnippetForError","_attachLoggerStream","projectId","ProjectUtils","attachLoggerStream","stream","write","tag","_maybeParseMsgJSON","_cleanUpNodeErrors","_handleMetroEvent","_enqueueAppendLogChunk","originalChunk","includes","getenv","boolish","_handleBundleTransformEvent","code","error","port","_formatModuleResolutionError","_formatBundlingError","level","Logger","ERROR","warning","WARN","reason","_formatWorkerChunk","JSON","stringify","getPlatformTagForBuildDetails","platform","formatted","ios","android","web","chalk","bold","id","_bundleBuildStart","Date","progressChunk","percentProgress","bundleComplete","duration","getTime","percentage","transformedFileCount","totalFileCount","progress","start","end","forEach","log","message","exec","originModulePath","moduleName","relativePath","path","relative","DOCS_PAGE_URL","NODE_STDLIB_MODULES","Array","isArray","errors","description","red","snippet","origin","shouldHide","push","_enqueueFlushLogsToAdd","parsedMsg","parse","e"],"mappings":"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","sourcesContent":["import { JSONObject } from '@expo/json-file';\nimport chalk from 'chalk';\nimport getenv from 'getenv';\nimport path from 'path';\n\nimport { Logger, ProjectUtils } from '../internal';\n\ntype BuildEventType =\n  | 'METRO_INITIALIZE_STARTED'\n  | 'BUILD_STARTED'\n  | 'BUILD_PROGRESS'\n  | 'BUILD_FAILED'\n  | 'BUILD_DONE';\ntype MetroLogRecord = {\n  tag: 'metro';\n  id: string;\n  shouldHide: boolean;\n  msg: ReportableEvent | string;\n  level: number;\n  _metroEventType?: BuildEventType;\n};\ntype ExpoLogRecord = {\n  tag: 'expo';\n  id: string;\n  shouldHide: boolean;\n  msg: any;\n  level: number;\n};\ntype DeviceLogRecord = {\n  tag: 'device';\n  id: string;\n  shouldHide: boolean;\n  msg: any;\n  level: number;\n  deviceId: string;\n  deviceName: string;\n};\nexport type LogRecord = (MetroLogRecord | ExpoLogRecord | DeviceLogRecord) & ProjectUtils.LogFields;\n\nexport type LogUpdater = (logState: LogRecord[]) => LogRecord[];\n\ntype ErrorObject = {\n  name?: string;\n  stack?: string;\n  message?: string;\n  code?: string;\n} & JSONObject;\n\ntype MetroError =\n  | ({\n      originModulePath: string;\n      message: string;\n      errors: { description: string; filename: string; lineNumber: number }[];\n    } & ErrorObject)\n  | ({\n      type: 'TransformError';\n      snippet: string;\n      lineNumber: number;\n      column: number;\n      filename: string;\n      errors: { description: string; filename: string; lineNumber: number }[];\n    } & ErrorObject)\n  | ErrorObject;\n\n// Metro reporter types\n// https://github.com/facebook/metro/blob/2a327fb19dd62169ab3ae9069011d8a599cfcf3e/packages/metro/src/lib/reporting.js\ntype GlobalCacheDisabledReason = 'too_many_errors' | 'too_many_misses';\ntype BundleDetails = {\n  entryFile: string;\n  platform: string;\n  dev: boolean;\n  minify: boolean;\n  bundleType: string;\n};\ntype ReportableEvent =\n  | {\n      port: number | undefined;\n      projectRoots: readonly string[];\n      type: 'initialize_started';\n    }\n  | {\n      type: 'initialize_done';\n    }\n  | {\n      type: 'client_log';\n      data: any;\n    }\n  | {\n      type: 'initialize_failed';\n      port: number;\n      error: MetroError;\n    }\n  | {\n      buildID: string;\n      type: 'bundle_build_done';\n    }\n  | {\n      buildID: string;\n      type: 'bundle_build_failed';\n    }\n  | {\n      buildID: string;\n      bundleDetails: BundleDetails;\n      type: 'bundle_build_started';\n    }\n  | {\n      error: MetroError;\n      type: 'bundling_error';\n    }\n  | {\n      // Currently only sent from Webpack\n      warning: string;\n      type: 'bundling_warning';\n    }\n  | {\n      type: 'dep_graph_loading';\n    }\n  | {\n      type: 'dep_graph_loaded';\n    }\n  | {\n      buildID: string;\n      type: 'bundle_transform_progressed';\n      transformedFileCount: number;\n      totalFileCount: number;\n\n      // A special property added for webpack support\n      percentage?: number;\n    }\n  | {\n      type: 'global_cache_error';\n      error: MetroError;\n    }\n  | {\n      type: 'global_cache_disabled';\n      reason: GlobalCacheDisabledReason;\n    }\n  | {\n      type: 'transform_cache_reset';\n    }\n  | {\n      type: 'worker_stdout_chunk';\n      chunk: string;\n    }\n  | {\n      type: 'worker_stderr_chunk';\n      chunk: string;\n    }\n  | {\n      type: 'hmr_client_error';\n      error: MetroError;\n    };\n\ntype StartBuildBundleCallback = (props: {\n  chunk: LogRecord;\n  bundleDetails: BundleDetails | null;\n}) => void;\ntype ProgressBuildBundleCallback = (props: {\n  progress: number;\n  start: Date | null;\n  chunk: any;\n  bundleDetails: BundleDetails | null;\n}) => void;\ntype FinishBuildBundleCallback = (props: {\n  error: string | null;\n  start: Date;\n  end: Date;\n  chunk: MetroLogRecord;\n  bundleDetails: BundleDetails | null;\n}) => void;\n\nexport default class PackagerLogsStream {\n  _projectRoot: string;\n  _getCurrentOpenProjectId: () => any;\n  _updateLogs: (updater: LogUpdater) => void;\n  _logsToAdd: LogRecord[] = [];\n  _bundleBuildChunkID: string | null = null;\n  _onStartBuildBundle?: StartBuildBundleCallback;\n  _onProgressBuildBundle?: ProgressBuildBundleCallback;\n  _onFinishBuildBundle?: FinishBuildBundleCallback;\n  _bundleBuildStart: Date | null = null;\n  _getSnippetForError?: (error: MetroError) => string | null;\n\n  constructor({\n    projectRoot,\n    getCurrentOpenProjectId,\n    updateLogs,\n    onStartBuildBundle,\n    onProgressBuildBundle,\n    onFinishBuildBundle,\n    getSnippetForError,\n  }: {\n    projectRoot: string;\n    getCurrentOpenProjectId?: () => any;\n    updateLogs: (updater: LogUpdater) => void;\n    onStartBuildBundle?: StartBuildBundleCallback;\n    onProgressBuildBundle?: ProgressBuildBundleCallback;\n    onFinishBuildBundle?: FinishBuildBundleCallback;\n    getSnippetForError?: (error: MetroError) => string | null;\n  }) {\n    this._projectRoot = projectRoot;\n    this._getCurrentOpenProjectId = getCurrentOpenProjectId || (() => 1);\n    this._updateLogs = updateLogs;\n\n    // Optional properties in case the consumer wants to handle updates on\n    // its own, eg: for a progress bar\n    this._onStartBuildBundle = onStartBuildBundle;\n    this._onProgressBuildBundle = onProgressBuildBundle;\n    this._onFinishBuildBundle = onFinishBuildBundle;\n\n    // Optional function for creating custom code frame snippet\n    // (e.g. with terminal colors) from a syntax error.\n    this._getSnippetForError = getSnippetForError;\n\n    this._attachLoggerStream();\n  }\n\n  _attachLoggerStream() {\n    const projectId = this._getCurrentOpenProjectId();\n\n    ProjectUtils.attachLoggerStream(this._projectRoot, {\n      stream: {\n        write: (chunk: LogRecord) => {\n          if (chunk.tag !== 'metro' && chunk.tag !== 'expo') {\n            return;\n          } else if (this._getCurrentOpenProjectId() !== projectId) {\n            // TODO: We should be confident that we are properly unsubscribing\n            // from the stream rather than doing a defensive check like this.\n            return;\n          }\n\n          chunk = this._maybeParseMsgJSON(chunk);\n          chunk = this._cleanUpNodeErrors(chunk);\n          if (chunk.tag === 'metro') {\n            this._handleMetroEvent(chunk);\n          } else if (\n            typeof chunk.msg === 'string' &&\n            chunk.msg.match(/\\w/) &&\n            chunk.msg[0] !== '{'\n          ) {\n            this._enqueueAppendLogChunk(chunk);\n          }\n        },\n      },\n      type: 'raw',\n    });\n  }\n\n  _handleMetroEvent(originalChunk: MetroLogRecord) {\n    const chunk = { ...originalChunk };\n    const { msg } = chunk;\n\n    if (typeof msg === 'string') {\n      if ((msg as string).includes('HTTP/1.1') && !getenv.boolish('EXPO_DEBUG', false)) {\n        // Do nothing with this message - we want to filter out network requests logged by Metro.\n      } else {\n        // If Metro crashes for some reason, it may log an error message as a plain string to stderr.\n        this._enqueueAppendLogChunk(chunk);\n      }\n      return;\n    }\n\n    switch (msg.type) {\n      // Bundle transform events\n      case 'bundle_build_started':\n      case 'bundle_transform_progressed':\n      case 'bundle_build_failed':\n      case 'bundle_build_done':\n        this._handleBundleTransformEvent(chunk);\n        return;\n\n      case 'initialize_started':\n        chunk._metroEventType = 'METRO_INITIALIZE_STARTED';\n        chunk.msg = 'Starting Metro Bundler';\n        break;\n      case 'initialize_done':\n        chunk.msg = `Started Metro Bundler`;\n        break;\n      case 'initialize_failed': {\n        // SDK <=22\n        const code = msg.error.code;\n        chunk.msg =\n          code === 'EADDRINUSE'\n            ? `Metro Bundler can't listen on port ${msg.port}. The port is in use.`\n            : `Metro Bundler failed to start. (code: ${code})`;\n        break;\n      }\n      case 'bundling_error':\n        chunk.msg =\n          this._formatModuleResolutionError(msg.error) ||\n          this._formatBundlingError(msg.error) ||\n          msg;\n        chunk.level = Logger.ERROR;\n        break;\n      case 'bundling_warning':\n        chunk.msg = msg.warning;\n        chunk.level = Logger.WARN;\n        break;\n      case 'transform_cache_reset':\n        chunk.msg =\n          'Your JavaScript transform cache is empty, rebuilding (this may take a minute).';\n        break;\n      case 'hmr_client_error':\n        chunk.msg = `A WebSocket client got a connection error. Please reload your device to get HMR working again.`;\n        break;\n      case 'global_cache_disabled':\n        if (msg.reason === 'too_many_errors') {\n          chunk.msg =\n            'The global cache is now disabled because it has been failing too many times.';\n        } else if (msg.reason === 'too_many_misses') {\n          chunk.msg = `The global cache is now disabled because it has been missing too many consecutive keys.`;\n        } else {\n          chunk.msg = `The global cache is now disabled. Reason: ${msg.reason}`;\n        }\n        break;\n      case 'worker_stdout_chunk':\n        chunk.msg = this._formatWorkerChunk('stdout', msg.chunk);\n        break;\n      case 'worker_stderr_chunk':\n        chunk.msg = this._formatWorkerChunk('stderr', msg.chunk);\n        break;\n      // Ignored events.\n      case 'client_log':\n      case 'dep_graph_loading':\n      case 'dep_graph_loaded':\n      case 'global_cache_error':\n        return;\n      default:\n        chunk.msg = `Unrecognized event: ${JSON.stringify(msg)}`;\n        break;\n    }\n    this._enqueueAppendLogChunk(chunk);\n  }\n\n  // A cache of { [buildID]: BundleDetails } which can be used to\n  // add more contextual logs. BundleDetails is currently only sent with `bundle_build_started`\n  // so we need to cache the details in order to print the platform info with other event types.\n  bundleDetailsCache: Record<string, BundleDetails> = {};\n\n  // Any event related to bundle building is handled here\n  _handleBundleTransformEvent = (chunk: MetroLogRecord) => {\n    const msg = chunk.msg as ReportableEvent;\n\n    const bundleDetails = 'buildID' in msg ? this.bundleDetailsCache[msg.buildID] || null : null;\n\n    if (msg.type === 'bundle_build_started') {\n      // Cache bundle details for later.\n      this.bundleDetailsCache[String(msg.buildID)] = msg.bundleDetails;\n      chunk._metroEventType = 'BUILD_STARTED';\n      this._handleNewBundleTransformStarted(chunk, msg.bundleDetails);\n    } else if (msg.type === 'bundle_transform_progressed' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_PROGRESS';\n      this._handleUpdateBundleTransformProgress(chunk, bundleDetails);\n    } else if (msg.type === 'bundle_build_failed' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_FAILED';\n      this._handleUpdateBundleTransformProgress(chunk, bundleDetails);\n    } else if (msg.type === 'bundle_build_done' && this._bundleBuildChunkID) {\n      chunk._metroEventType = 'BUILD_DONE';\n      this._handleUpdateBundleTransformProgress(chunk, bundleDetails);\n    }\n  };\n\n  static getPlatformTagForBuildDetails(bundleDetails?: BundleDetails | null) {\n    const platform = bundleDetails?.platform ?? null;\n    if (platform) {\n      const formatted = { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform;\n      return `${chalk.bold(formatted)} `;\n    }\n\n    return '';\n  }\n\n  private _handleNewBundleTransformStarted(\n    chunk: MetroLogRecord,\n    bundleDetails: BundleDetails | null\n  ) {\n    if (this._bundleBuildChunkID) {\n      return;\n    }\n\n    this._bundleBuildChunkID = chunk.id;\n    this._bundleBuildStart = new Date();\n\n    chunk.msg = 'Building JavaScript bundle';\n\n    if (this._onStartBuildBundle) {\n      this._onStartBuildBundle({ chunk, bundleDetails });\n    } else {\n      this._enqueueAppendLogChunk(chunk);\n    }\n  }\n\n  private _handleUpdateBundleTransformProgress(\n    progressChunk: MetroLogRecord,\n    bundleDetails: BundleDetails | null\n  ) {\n    const msg = progressChunk.msg as ReportableEvent;\n\n    let percentProgress;\n    let bundleComplete = false;\n    if (msg.type === 'bundle_build_done') {\n      percentProgress = 100;\n      bundleComplete = true;\n      if (this._bundleBuildStart) {\n        const duration = new Date().getTime() - this._bundleBuildStart.getTime();\n        progressChunk.msg = `Building JavaScript bundle: finished in ${duration}ms.`;\n      } else {\n        progressChunk.msg = `Building JavaScript bundle: finished.`;\n      }\n    } else if (msg.type === 'bundle_build_failed') {\n      percentProgress = -1;\n      bundleComplete = true;\n      progressChunk.msg = `Building JavaScript bundle: error`;\n      progressChunk.level = Logger.ERROR;\n    } else if (msg.type === 'bundle_transform_progressed') {\n      if (msg.percentage) {\n        percentProgress = msg.percentage * 100;\n      } else {\n        percentProgress = (msg.transformedFileCount / msg.totalFileCount) * 100;\n        // percentProgress = Math.floor((msg.transformedFileCount / msg.totalFileCount) * 100);\n      }\n      progressChunk.msg = `Building JavaScript bundle: ${percentProgress}%`;\n    } else {\n      return;\n    }\n\n    if (this._bundleBuildChunkID) {\n      progressChunk.id = this._bundleBuildChunkID;\n    }\n\n    if (this._onProgressBuildBundle) {\n      this._onProgressBuildBundle({\n        progress: percentProgress,\n        start: this._bundleBuildStart,\n        chunk: progressChunk,\n        bundleDetails,\n      });\n\n      if (bundleComplete) {\n        if (this._onFinishBuildBundle && this._bundleBuildStart) {\n          const error = msg.type === 'bundle_build_failed' ? 'Build failed' : null;\n          this._onFinishBuildBundle({\n            error,\n            start: this._bundleBuildStart,\n            end: new Date(),\n            chunk: progressChunk,\n            bundleDetails,\n          });\n        }\n        this._bundleBuildStart = null;\n        this._bundleBuildChunkID = null;\n      }\n    } else {\n      this._updateLogs(logs => {\n        if (!logs || !logs.length) {\n          return [];\n        }\n\n        logs.forEach(log => {\n          if (log.id === this._bundleBuildChunkID) {\n            log.msg = progressChunk.msg;\n          }\n        });\n\n        if (bundleComplete) {\n          this._bundleBuildChunkID = null;\n        }\n\n        return [...logs];\n      });\n    }\n  }\n\n  _formatModuleResolutionError(error: MetroError): string | null {\n    if (!error.message) {\n      return null;\n    }\n    const match = /^Unable to resolve module `(.+?)`/.exec(error.message);\n    const originModulePath = error.originModulePath as string | null;\n    if (!match || !originModulePath) {\n      return null;\n    }\n    const moduleName = match[1];\n    const relativePath = path.relative(this._projectRoot, originModulePath);\n\n    const DOCS_PAGE_URL =\n      'https://docs.expo.dev/workflow/using-libraries/#using-third-party-libraries';\n\n    if (NODE_STDLIB_MODULES.includes(moduleName)) {\n      if (originModulePath.includes('node_modules')) {\n        return `The package at \"${relativePath}\" attempted to import the Node standard library module \"${moduleName}\". It failed because the native React runtime does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      } else {\n        return `You attempted attempted to import the Node standard library module \"${moduleName}\" from \"${relativePath}\". It failed because the native React runtime does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      }\n    }\n    return `Unable to resolve \"${moduleName}\" from \"${relativePath}\"`;\n  }\n\n  _formatBundlingError(error: MetroError): string | null {\n    let message = error.message;\n    if (!message && Array.isArray(error.errors) && error.errors.length) {\n      message = (error.errors[0] as any).description;\n    }\n    if (!message) {\n      return null;\n    }\n\n    message = chalk.red(message);\n\n    const snippet = (this._getSnippetForError && this._getSnippetForError(error)) || error.snippet;\n    if (snippet) {\n      message += `\\n${snippet}`;\n    }\n    return message;\n  }\n\n  _formatWorkerChunk(origin: 'stdout' | 'stderr', chunk: string) {\n    return chunk;\n    // const lines = chunk.split('\\n');\n    // if (lines.length >= 1 && lines[lines.length - 1] === '') {\n    //   lines.splice(lines.length - 1, 1);\n    // }\n    // return lines.map(line => `transform[${origin}]: ${line}`).join('\\n');\n  }\n\n  _enqueueAppendLogChunk(chunk: LogRecord) {\n    if (!chunk.shouldHide) {\n      this._logsToAdd.push(chunk);\n      this._enqueueFlushLogsToAdd();\n    }\n  }\n\n  _enqueueFlushLogsToAdd = () => {\n    this._updateLogs(logs => {\n      if (this._logsToAdd.length === 0) {\n        return logs;\n      }\n\n      const nextLogs = logs.concat(this._logsToAdd);\n      this._logsToAdd = [];\n      return nextLogs;\n    });\n  };\n\n  _maybeParseMsgJSON(chunk: LogRecord) {\n    try {\n      const parsedMsg = JSON.parse(chunk.msg);\n      chunk.msg = parsedMsg;\n    } catch (e) {\n      // non-JSON message\n    }\n\n    return chunk;\n  }\n\n  _cleanUpNodeErrors = (chunk: LogRecord) => {\n    if (typeof chunk.msg !== 'string') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/\\(node:.\\d*\\)/)) {\n      // Example: (node:13817) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): SyntaxError: SyntaxError /Users/brent/universe/apps/new-project-template/main.js: Unexpected token (10:6)\n      // The first part of this is totally useless, so let's remove it.\n      if (chunk.msg.match(/UnhandledPromiseRejectionWarning/)) {\n        chunk.msg = chunk.msg.replace(/\\(node:.*\\(rejection .*\\):/, '');\n        if (chunk.msg.match(/SyntaxError: SyntaxError/)) {\n          chunk.msg = chunk.msg.replace('SyntaxError: ', '');\n        }\n      } else if (chunk.msg.match(/DeprecationWarning/)) {\n        chunk.msg = '';\n      }\n    }\n\n    return chunk;\n  };\n}\n\nconst NODE_STDLIB_MODULES = [\n  'assert',\n  'async_hooks',\n  'buffer',\n  'child_process',\n  'cluster',\n  'crypto',\n  'dgram',\n  'dns',\n  'domain',\n  'events',\n  'fs',\n  'http',\n  'https',\n  'net',\n  'os',\n  'path',\n  'punycode',\n  'querystring',\n  'readline',\n  'repl',\n  'stream',\n  'string_decoder',\n  'tls',\n  'tty',\n  'url',\n  'util',\n  'v8',\n  'vm',\n  'zlib',\n];\n"],"file":"PackagerLogsStream.js"}